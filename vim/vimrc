" defaults
let mapleader = " "

syntax on

set noerrorbells
set tabstop=2 softtabstop=2
set shiftwidth=2
set expandtab
set smartindent
set nu
set nowrap
set smartcase
set noswapfile
set nobackup
set nowritebackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set relativenumber
set hidden

" Give more space for displaying messages.
set cmdheight=2


set colorcolumn=80
highlight CanolorColumn ctermbg=0 guibg=lightgrey
"set termguicolors


call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'git@github.com:ctrlpvim/ctrlp.vim.git'
Plug 'aswathkk/DarkScene.vim', { 'as': 'challenger-deep' }
Plug 'vim-airline/vim-airline'
Plug 'preservim/nerdtree'
Plug 'bling/vim-bufferline'

call plug#end()


colorscheme darkscene
set background=dark

let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']


" coc options
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"


function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction


" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)


" nerdtree
map <C-n> :NERDTreeToggle<CR>

